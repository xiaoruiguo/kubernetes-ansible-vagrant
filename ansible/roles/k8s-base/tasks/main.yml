---
- name: Ensure SSH Directories
  when: ansible_distribution == 'Ubuntu'
  become: yes
  file:
    path: /home/ubuntu/.ssh
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0700

- name: Copy SSH Key Files
  when: ansible_distribution == 'Ubuntu'
  become: yes
  copy:
    src: files/{{ item }}
    dest: /home/ubuntu/.ssh/{{ item }}
    owner: ubuntu
    group: ubuntu
    mode: 0600
  with_items:
    - id_rsa
    - id_rsa.pub
    - config

- name: Ensure Authorized SSH Key
  when: ansible_distribution == 'Ubuntu'
  become: yes
  authorized_key:
    user: ubuntu
    key:  "{{ lookup('file', '/home/ubuntu/.ssh/id_rsa.pub') }}"
    state: present

- name: Remove Default Host Entry
  become: yes
  lineinfile:
    dest: /etc/hosts
    regexp: '^127\.0\.0\.1\s+k8s.*$'
    state: absent

- name: Ensure Hosts File
  become: yes
  lineinfile:
    dest: /etc/hosts
    line: "{{ item.ip }} {{ item.name }}"
  with_items:
    - { ip: "172.42.42.11", name: "k8s1" }
    - { ip: "172.42.42.12", name: "k8s2" }
    - { ip: "172.42.42.13", name: "k8s3" }

- name: Ensure Kubernetes APT Key
  when: ansible_distribution == 'Ubuntu'
  become: yes
  apt_key:
    url: https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg
    state: present
  tags:
    - k8s

- name: Ensure Kubernetes APT Repository
  when: ansible_distribution == 'Ubuntu'
  become: yes
  apt_repository:
    repo: 'deb https://mirrors.aliyun.com/kubernetes/apt kubernetes-xenial main'
    state: present
    update_cache: yes
  tags:
    - k8s

- name: Ensure Base Kubernetes
  when: ansible_distribution == 'Ubuntu'
  become: yes
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - docker.io
    - kubelet
    - kubeadm
    - kubectl
    - kubernetes-cni
  tags:
    - k8s

- name: Ensure Kubernetes YUM repository
  when: ansible_distribution == 'CentOS'
  become: yes
  yum_repository:
    name: Kubernetes
    description: Kubernetes YUM repository
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el$releasever-$basearch-unstable
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg
      https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    gpgcheck: yes
    state: present
  tags:
    - k8s

# Equivalent of `chcon -Rt svirt_sandbox_file_t /var/lib/kubelet`
- file: path=/var/lib/kubelet state=directory setype=svirt_sandbox_file_t
  when: ansible_distribution == 'CentOS'
  become: yes

- name: Ensure Base Kubernetes
  when: ansible_distribution == 'CentOS'
  become: yes
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - docker
    - kubelet
    - kubeadm
    - kubectl
    - kubernetes-cni
  tags:
    - k8s

- name: Ensure docker.service
  service: name=docker state=started enabled=yes
  tags:
    - k8s

- name: Ensure kubelet.service
  service: name=kubelet state=started enabled=yes
  tags:
    - k8s

- name: Ensure firewalld.service
  when: ansible_distribution == 'CentOS'
  service: name=firewalld state=started enabled=yes
  tags:
    - k8s


# Equivalent of `firewall-cmd --permanent --zone=trusted --add-interface=eth1`
- firewalld: zone=trusted interface=eth1 permanent=true state=enabled immediate=true
  when: ansible_distribution == 'CentOS'
  tags:
    - k8s

# Equivalent of `firewall-cmd --permanent --zone=trusted --add-interface=weave`
- firewalld: zone=trusted interface=weave permanent=true state=enabled immediate=true
  when: ansible_distribution == 'CentOS'
  tags:
    - k8s

# Equivalent of `firewall-cmd --permanent --zone=trusted --add-source=172.42.42.0/24`
- firewalld: source=172.42.42.0/24 zone=trusted permanent=true state=enabled immediate=true
  when: ansible_distribution == 'CentOS'
  tags:
    - k8s

# 10.32.0.0/12 is the default pod CIDR for Weave Net
# you will need to update this if you are using a different
# network provider, or a different CIDR for whatever reason
# Equivalent of `firewall-cmd --permanent --zone=trusted --add-source=10.32.0.0/12`
- firewalld: source=10.32.0.0/12 zone=trusted permanent=true state=enabled
  when: ansible_distribution == 'CentOS'
  tags:
    - k8s

# Equivalent of `firewall-cmd --permanent --zone=trusted --add-port=10250`
- firewalld: port=10250/tcp zone=trusted permanent=true state=enabled immediate=true
  when: ansible_distribution == 'CentOS'
  tags:
    - k8s

- command: firewall-cmd --reload
  when: ansible_distribution == 'CentOS'
